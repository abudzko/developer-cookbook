# docker-compose -f compose-kafka.yml up
#docker-compose -f compose-kafka.yml down
version: "3.9"
services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      # Also exposes specified ports from containers.
      # Ports are open not only for other services on the same network
      # but also to the host(localhost)
      - "10001:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9091,EXTERNAL://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9091,EXTERNAL://localhost:10001 #returned to client, client uses 10001 and routed to 9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_CFG_SSL_KEYSTORE_LOCATION: /home/tmp/server.keystore.jks
#      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: password
#      KAFKA_CFG_SSL_TRUSTSTORE_LOCATION: /home/tmp/server.keystore.jks
#      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: password
#      KAFKA_TLS_CLIENT_AUTH: none
    volumes:
      - /home/aliaksei/Downloads/tmp/server.keystore.jks:/bitnami/kafka/config/certs/kafka.keystore.jks
      - /home/aliaksei/Downloads/tmp/server.keystore.jks:/bitnami/kafka/config/certs/kafka.truststore.jks
  kafka-drop:
    # http://localhost:9000/drop/
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9091
      SERVER_SERVLET_CONTEXTPATH: "/drop"
    depends_on:
      # Wait till Kafka Broker servers will start
      - kafka
