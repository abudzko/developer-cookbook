server.port: ${HTTP_SERVER_PORT:8000}

kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:10001}
  topic:
    event-topic-name: zoo-event
    request-topic-name: request
    response-topic-name: response
  consumer:
    request:
      start-timeout-sec: 5
spring:
  kafka:
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1
      client-id: zoo-event-id
  datasource:
    event-writer:
      platform: postgres
      url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgresql-master:5432/zoo-db}
#      url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://192.168.1.104:15432/zoo-db}
      username: ${SPRING_DATASOURCE_USERNAME:user}
      password: ${SPRING_DATASOURCE_PASSWORD:password}
      driverClassName: org.postgresql.Driver
      schema: zoo
      hikari:
        connectionTimeout: 30000
        idleTimeout: 600000
        maxLifetime: 1800000
        maximum-pool-size: 10
    event-reader:
      platform: postgres
      url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://haproxy-lb:15433/zoo-db}
      username: ${SPRING_DATASOURCE_USERNAME:user}
      password: ${SPRING_DATASOURCE_PASSWORD:password}
      driverClassName: org.postgresql.Driver
      schema: zoo
      hikari:
        connectionTimeout: 30000
        idleTimeout: 600000
        maxLifetime: 1800000
        maximum-pool-size: 10
  liquibase:
    user: ${spring.datasource.event-writer.username}
    password: ${spring.datasource.event-writer.password}
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yml
    url: ${spring.datasource.event-writer.url}
