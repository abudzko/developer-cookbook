.container {
    display: inline-flex;
    flex: 1 1 300px;
    border-radius: 10px;
    border: 1px solid #ccc;
    overflow: hidden;
}

.icon {
    padding: 0.8rem;
}

.searchBox {
    border: 0;
    flex: 1;
}

.searchButton {
    color: white;
    background: #0f4a8a;
    border: 0;
    padding: 0.8rem;
    border-radius: 8px;
}

.row {
    display: flex;
    align-items: stretch;
}

.row .label {
    flex: 0 0 auto;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

.row .diagramContainer {
    flex: 1;
    display: flex;
    justify-content: flex-start;

}

.row .item {
    display: flex;
    justify-content: center;
    align-items: center;
}

.i1 {
    background-color: #ee9972;
}

.i2 {
    background-color: #f4ce14;
}

.i3 {
    background-color: #495e57;
}

.i4 {
    background-color: #3e9344;
}

.myGrid {
    display: grid;
    grid-template-columns: 1fr 1fr 4fr;
    /*grid-template-rows: 1fr 1fr 1fr; */
    grid-template-areas:
        "i1 i1 i2"
        "i3 i3 i2"
        "i3 i3 i2"
        "i4 i4 ."
        "i5 . ."
        "i7 i7 i6"
        "i7 i7 i6"
}

.gridItem1 {
    grid-area: i1;
}

.gridItem2 {
    grid-area: i2;
}

.gridItem3 {
    grid-area: i3;
}

.gridItem4 {
    grid-area: i4;
}

.gridItem5 {
    grid-area: i5;
}

.gridItem6 {
    grid-area: i6;
}

.gridItem7 {
    grid-area: i7;
}

.g {
    background-color: aquamarine;
    margin: 1px;
    text-align: center;
}


/* Selectors */
/*1. Element or type selector */
p {
    color: #3e9344;
}

/*2. Id selector */
#my-id-selector {
    color: #ee9972;
}

/*3. Class selector */
.my-class-selector {
    color: #f4ce14;
}

/*4. Attribute selector */
p[attr1=attrValue] {
    color: aqua;
}

p[attr1~=value2] {
    color: blueviolet;
}

p[attr2] {
    color: violet;
}

/* 5. nth-child */
li:nth-child(2) {
    color: brown;
}

/* 5. nth-of-type */
li:nth-child(3) {
    color: tomato;
}

/* 6. start selector */
* {
    font-family: 'Courier New', Courier, monospace;
}

/* 7. Group selector */
h1,
p {
    font-size: 24px;
}

/* Compination selectors  */
/* 8. Descendant selector " " - selects all descendants*/
.combination-selectors h2 {
    font-size: 10px;
}

/* 9. Child selector ">" select childs by path */
div>div>p {
    color: burlywood;
}

/* 10. General sibling selector "~ * - selects all siblings after h3*/
h3~span {
    color: chartreuse;
}

/* 11. Adjacent sibling selector "+" - selects one next sibling element */
h4+em {
    color: cadetblue;
}

/*Pseudo classes*/
.my-button:focus {
    background-color: #3e9344;
}

.my-link:active {
    background-color: #f4ce14;
}

.my-button:hover {
    background-color: #ee9972;
}

/* Pseudo-elements */
.pseudo-element::first-letter {
    font-size: 24px;
}

.pseudo-element::first-line {
    background-color: red;
}

.pseudo-element>span::selection {
    background-color: #f4ce14;
}

/* Transforms and Transitions */
.effects {
    transform: rotate(0deg);
}

.effects:hover {
    transform: rotate(-360deg);
    transition: transform 3s;
}


/* Animation */

@keyframes bounce {
    0% {
        transform: translate3d(0, 0, 0);
    }

    25% {
        transform: translate3d(300px, -50px, 0);
    }

    50% {
        transform: translate3d(600px, 0px, 0);
    }

    75% {
        transform: translate3d(300px, 50px, 0);
    }

    100% {
        transform: translate3d(0, 0, 0);
    }
}

@keyframes bounce1 {
    from {
        right: 100px;
    }

    to {
        right: 0px;
    }
}

.animation-ball {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    position: absolute;
    background-color: #3e9344;
    animation: bounce1 2s linear;
    /* animation-direction: alternate; */
    animation-iteration-count: infinite;
}
/*  */

/* Unit	Name	            Equivalent to
cm	    Centimeters         1cm = 37.8px = 25.2/64in
mm	    Millimeters         1mm = 1/10th of 1cm
Q	    Quarter-millimeters	1Q = 1/40th of 1cm
in	    Inches          	1in = 2.54cm = 96px
pc	    Picas           	1pc = 1/6th of 1in
pt	    Points          	1pt = 1/72nd of 1in
px	    Pixels          	1px = 1/96th of 1in */

/* Unit	Relative to
em      	Font size of the parent, in the case of typographical properties like font-size, and font size of the element itself, in the case of other properties like width.
ex      	x-height of the element's font.
ch      	The advance measure (width) of the glyph "0" of the element's font.
rem     	Font size of the root element.
lh      	Line height of the element.
rlh     	Line height of the root element. When used on the font-size or line-height properties of the root element, it refers to the properties' initial value.
vw      	1% of the viewport's width.
vh      	1% of the viewport's height.
vmin        1% of the viewport's smaller dimension.
vmax        1% of the viewport's larger dimension.
vb	        1% of the size of the initial containing block in the direction of the root element's block axis.
vi	        1% of the size of the initial containing block in the direction of the root element's inline axis.
svw, svh	1% of the small viewport's width and height, respectively.
lvw, lvh	1% of the large viewport's width and height, respectively.
dvw, dvh	1% of the dynamic viewport's width and height, respectively. */